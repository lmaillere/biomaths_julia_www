---
title: "Présentation"
---


Ces pages proposent une introduction à la simulation d'équations différentielles avec Julia, centrée sur la simulation de modèles classiques en dynamique des populations.

Le document est structuré comme suit :

- La section sur les [populations isolées](pop_isolees.qmd) introduit les bases en dimension 1 (modèle de Malthus, modèle logistique et effets Allee)

- la section sur les [populations exploitées](pop_exploitees.qmd) introduit les diagrammes de bifurcations (prélèvements et effets Allee, interactions insectes-oiseaux)

- la section sur les [populations en interaction](pop_interactions.qmd) introduit la dimension 2, notamment via les représentations dans l'espace d'état, et traite des interactions entre populations sous l'angle des modèles proies-prédateurs (modèle de Lotka Volterra et [modèle de Rosenzweig MacArthur](pop_interactions2.qmd))

## Installation de Julia

La façon la plus simple d'installer `Julia` est d'utiliser [juliaup](https://github.com/JuliaLang/juliaup).

Sur Linux :
```{julia}
#| eval: false
curl -fsSL https://install.julialang.org | sh
```
et procéder à l'installation.

Puis procéder à l'installation du package `IJulia`:
```{julia}
#| eval: false
julia
julia> ]  # package mode
(@v1.9) pkg> add IJulia
```


Un noyau `Julia` est ensuite disponible dans votre `jupyter` favori ou via son propre système de notebook `Pluto.jl`:
```{julia}
#| eval: false
julia> ]   # package mode
(@v1.9) pkg> add Pluto
julia> using Pluto  # hit backspace first to exit package mode
```

Une extension `Julia` est disponible pour VScode/VScodium.

[Allons-y !](pop_isolees.qmd)