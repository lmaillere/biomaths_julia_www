---
title: "Matériel supplémentaire"
---
\

Les pages listées ici contiennent du matétiel supplémentaire pour compléments plus avancés :

- [tracer](annexe_LV_makieplot.qmd) une jolie figure pour Lotka Volterra avec `Makie.jl`

- [utiliser](annexe_integrator.qmd) l'interface `integrator` de `DifferentialEquations.jl` ou la redéfinition de problèmes d'intégration via `remake`

- réaliser des [graphiques animés](annexe_LV_anim.qmd) avec `Makie.jl`, un exemple sur Lotka Volterra

- [simuler](annexe_FisherKPP.qmd) une équation de réaction-diffusion en une dimension : le modèle de Fisher-KPP



Nous n'avons qu'effleuré l'utilisation de `Julia`, par exemple tout le code présenté est scripté et relativement peu de code est inclus dans des fonctions. Nous n'avons pas non plus abordé les types `struct` et le `multiple dispatch` qui sont pourtant au coeur du fonctionnement, de l'efficacité, et de la versatilité  de ce langage.

Pour aller plus loin (et aussi revoir quelques bases !), vous pouvez par exemple vous référer à ces tutoriels:

- le cours [Introduction to computational thinking](https://computationalthinking.mit.edu/Fall23/) du MIT (assez long)

- le workshop [Julia Zero-to-Hero](https://github.com/Datseris/Zero2Hero-JuliaWorkshop) de Georges Datseris (plus direct)
