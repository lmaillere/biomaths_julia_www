{
  "hash": "050a8a0463ead945efd0cb4d169439ee",
  "result": {
    "markdown": "---\ntitle: \"Graphiques animés avec `Makie.jl`\"\n---\n\n\\\n\nNous reprenons le modèle de Lotka Volterra, et testons les capacités de création de graphiques animés avec `Makie.jl`^[Il est aussi possible de créér sur le même modèle des [graphiques interactifs](https://gist.github.com/Datseris/4b9d25a3ddb3936d3b83d3037f8188dd)]. Ce document est largement inspiré par l'excellent [tutoriel](https://www.youtube.com/watch?v=L-gyDvhjzGQ) sur le double pendule chaotique par G. Datseris. \n\n## Trajectoire animée en 2D\n\nLe principe tire partie des conteneurs `Observable`, qui sont des conteneurs mutables que l'on peut donc modifier et dont on peut surveiller l'action de modification. Lorsqu'un `Observable` passé à `Makie.jl` est modifié, ce dernier le prend en compte et met à jour le graphique correspondant automatiquement. Cela fonctionne particulièrement bien avec le backend `GL`, qui depuis un script ou un notebook ouvre une fenetre graphique qui se met à jour automatiquement. Sur cette page, il nous faut réafficher la figure.\n\nPrenons un exemple, sur une simple figure, on définit un `Observable` random puis on le trace:\n\n::: {.cell execution_count=1}\n``` {.julia .cell-code}\nusing GLMakie\n\nx = 1:4\ny = Observable(rand(4))\nfig, ax = lines(x, y)\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n![](annexe_LV_anim_files/figure-html/cell-2-output-1.svg){}\n:::\n:::\n\n\nEnsuite on réassigne la valeur de l'observable^[notez la syntaxe `y[]=` qui met à jour le contenu de l'obervable et informe de la mise à jour] et on réaffiche\n\n::: {.cell execution_count=2}\n``` {.julia .cell-code}\ny[] = rand(4)\ndisplay(fig) \n```\n\n::: {.cell-output .cell-output-display}\n![](annexe_LV_anim_files/figure-html/cell-3-output-1.svg){}\n:::\n\n::: {.cell-output .cell-output-display execution_count=11}\n```\nCairoMakie.Screen{IMAGE}\n```\n:::\n:::\n\n\n",
    "supporting": [
      "annexe_LV_anim_files"
    ],
    "filters": [],
    "includes": {}
  }
}