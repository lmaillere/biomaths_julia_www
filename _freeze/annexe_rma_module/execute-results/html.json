{
  "hash": "93e98ce826be5cf0e38e5b87d9a63372",
  "result": {
    "markdown": "---\ntitle: \"Mon premier module\"\n---\n\n## Module `RmaMod.jl`\n\nNous exploitons le code produit pour simuler de façon efficace le modèle de Rosenzweig MacArthur (cf. cette [page](annexe_swift_rma.qmd)) pour générer un module (essentiellement un ensemble d'objets et de fonctions qui peuvent être utilisés par d'autres programmes).\n\nUne fois le code entièrement sous forme de `struct` et de `function`, la création du module est très simple. On place le module dans un fichier `RmaMod.jl` avec l'architecture suivante :\n\n::: {.cell execution_count=2}\n``` {.julia .cell-code}\n# ce code n'est pas exécuté dans cette cellule pour ne pas interférer\n# avec le module que nous importons après\n\"\"\"\nsome help regarding the module...\n\"\"\"\nmodule RmaMod\n\n# import required packages, e.g.\nusing StaticArrays\n\n# put structs help and definition, e.g.:\n\"\"\"\nsome help for IniV struct\n\"\"\"\n@kwdef struct IniV\n    x0::Float64 = 1.0\n    y0::Float64 = 1.95\n    u0::SVector{2, Float64} = SVector(x0, y0)\nend\n\n# put functions help and definition, e.g.:\n\"\"\"\nsome help for logistic function\n\"\"\"\nfunction logistic(x::Real, p::ParRma)\n    (; r, K) = p    # deconstruct/get r and K from p\n    return r*x*(1-x/K)\nend\n\n# export what you want other programs to know when importing through `using`\nexport IniV, logistic\n\nend\n```\n:::\n\n\nLe *vrai* fichier `RmaMod.jl` définissant le module `RmaMod` est disponible [ici](src/RmaMod.jl).\n\n## Utilisation du module\n\nPour utiliser le module contenu dans le fichier `RmaMod.jl`, nous incluons ce fichier (il est dans le répertoire `src` ici) et l'importons avec `using` :\n\n::: {.cell execution_count=3}\n``` {.julia .cell-code}\ninclude(\"src/RmaMod.jl\")\nusing .RmaMod\n```\n:::\n\n\n::: {.cell execution_count=4}\n``` {.julia .cell-code}\n?RmaMod\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nsearch: RmaMod\n\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=3}\nThis module provides `structs` and `functions` to simulate and plot the dynamics and bifurcation diagram of the Rosenzweig MacArthur model.\n\nDefined structs are :\n\nDefined functions are :\n\n:::\n:::\n\n\n",
    "supporting": [
      "annexe_rma_module_files"
    ],
    "filters": [],
    "includes": {}
  }
}